class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        sort(piles.begin(),piles.end());
        int ans = INT_MAX;
        int l = 1;
        int r = piles.back();
        while(l <= r){
            int mid = l+(r-l)/2;
            int count=0;
            for(int i=0;i<piles.size();i++){
                if(piles[i]%mid) count+=(piles[i]/mid)+1;
                else count+=(piles[i]/mid);
            }
            if(count <= h){
                ans = min(ans,mid);
                r=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return ans;
    }
};
